
 -----------------------------------------------------------

 This is a configuration File for GAPE 
 (Genetic Algorithm for Pharmacophore Elucidation)

 Blank lines or lines that begin with whitespace or '#' 
 are ignored

 The stuff in [] brackets is use to configure the parameter file
 editor.

 -----------------------------------------------------------

 [POPULATION SECTION]

 This section contains parameters that define the GA. So the
 parameters here define the search process but not the scoring
 function.
        
 [N_RUNS INTEGER]

 <n_runs> is the number of times the GA is run. So we run the GA
 <n_runs> times and ranks the <n_runs> solutions.

n_runs = 10
 
 [GUESS_GA_PARAMETERS BOOLEAN]
 
 If <guess_ga_parameters> is set GAPE overrides the next three
 paramters (<popsize>, <n_iterations> nad <n_islands>.  <popsize> is
 100, <n_islands> is <n_molecules>+1 and <n_iterations> is
 <n_molecules>*15000.

guess_ga_parameters = true
 
 [N_ISLANDS INTEGER]

 The GA uses the island model where there are <n_islands>
 sub-populations

n_islands = 5 
 
 [POPSIZE INTEGER]

 Each sub-population contains <popsize> chromosomes. So the total
 number of chromosomes in the system is <popsize>*<n_islands>.

popsize = 100

 [N_ITERATIONS INTEGER]

 <n_iterations> is the total number of genetic operators applied over
 the length of the GA run. So each subpopulation will have
 <n_iterations>/<n_islands> operations applied.

 60000 - should be good enough for almost anything
n_iterations = 60000
 25000 - may be better for simpler problems, if you're in a hurry.
# n_iterations = 25000

 [SELECT_PRESSURE DOUBLE]

 The GA is steady-state no duplicates with linear normalized
 selection (see Davis 1991, Handbook of Genetic Algorithms). The
 <selection_pressure> is the slice of the roulette wheel that the best
 chromosome gets, given that the worst chromosome has a slice of size
 1.

select_pressure = 1.001

 [USE_NICHES BOOLEAN]
 [NICHE_DISTANCE DOUBLE]
 [NICHE_SIZE INTEGER]
 [NICHING_OFF DOUBLE]
       
 Niching. When adding a new chromosome to a population that
 chromosome replaces the worst member of it's niche, if the niche is
 full. A chromosome shares a niche with another chromosome if the
 mean RMS distance between equivalent features (donor hyrogen fitting
 points, acceptor atoms, aromatic ring centers and hydrophobic atoms)
 is less than <niche_distance>. Set <use_niches> to enable and the
 size of the niche is defined by <niche_size>.
 
use_niches = yes
niche_distance = 1.0
niche_size = 5
#niching_off = 0.8
niching_off = 0.6
    
 [CROSSOVER_WT INTEGER]
 [MUTATE_WT INTEGER]
 [MIGRATE_WT INTEGER]

 Operator Weights. Three operators are defined crossover, mutation
 and migration. They have associated weights <crossover_wt>,
 <mutate_wt> and <migrate_wt>. The probability of an operator being
 chosen in any iteration is <operator_wt>/<sum of all operator
 weights>.

crossover_wt = 95
mutate_wt = 95
migrate_wt = 10

 [FITNESS SECTION]

 This section contains parameters that define the scoring function.
 The scoring function currently contains 5 terms: <donor_score>,
 <acceptor_score>, <aromatic_score>, <volume_score>,
 <conformational_score> and <constraint_wt>

 [DONOR_HYDROGEN_WT DOUBLE]
 [ACCEPTOR_ATOM_WT DOUBLE]
 [AROMATIC_RING_WT DOUBLE]
 [VOLUME_WT DOUBLE]
 [CONF_WT DOUBLE]
 [CONSTRAINT_WT DOUBLE]

 The fitness of a chromosome is
 <donor_hydrogen_wt>*<donor_score> +
 <acceptor_atom_wt>*<acceptor_score> +
 <aromatic_ring_wt>*<aromatic_score> + <volume_wt>*<volume_score> +
 <conf_wt>*<conformational_score> + <constraint_wt>*<constraint_score>

donor_hydrogen_wt = 1750
acceptor_atom_wt = 1750
aromatic_ring_wt = 2500
volume_wt = 100.0
conf_wt = 10.0
constraint_wt = 100.0

 [USE_FEATURE_CLUSTERING BOOLEAN]

 Set <use_feature_clustering> to true to enable 3D clustering of
 features. Pharmacophore point scoring is done without reference to
 the base molecule. Uses 3D relocation clustering of feature fitting
 points. When scoring a cluster of fitting points each feature is
 tried in turn and the best scoring feature is selected as a "base"
 feature.  Ignores the <compare_all> and <singe_match_only>
 settings. This setting is ignored if we are only fitting a pair of
 molecules.
									   
use_feature_clustering = yes

  [COMPARE_ALL BOOLEAN]
      
  Set <compare_all> true to compare all molecules against all other
  molecules (as opposed to picking one base molecule and fitting the
  other molecules to it).  This didn't seem to perform too well.  I
  think it still works, but it's not recomended.

compare_all = no

  [SINGLE_MATCH_ONLY BOOLEAN]
      
  Set <single_match_only> to true so that a feature can only
  contribute once in the overlay.  The highest score for a feature is
  then it's contribution. Otherwise each feature in the base molecule
  is compared with every equivalent feature in the other molecules and
  the scores summed.

single_match_only = yes

  [SCALE_FITTING BOOLEAN] 
  [START_FITTING_RADIUS DOUBLE] 
  [FINISH_FITTING_RADIUS DOUBLE] 
  [N_REBUILDS INTEGER] 

  The fitting radius can be annealed over the GA run.  To score a
  fitting point in one molecule against a fitting point in another
  molecule gaussian overlap is used in the scoring function.
  Approximate radii for these gaussians is specified here: the radius
  starts at size <start_fitting_radius> and is linearly scaled to
  <finish_fitting_radius> through to <niching_off>*<n_iterations>
  iterations of the GA run.  The radius changes every
  <rebuild_interval> operations.  Set <scale_fitting> to enable.  If
  <scale_fitting> is no then the radius stays constant at
  <finish_fitting_radius>.

scale_fitting = yes
start_fitting_radius = 3.5
finish_fitting_radius = 1.5
n_rebuilds = 24

  [IGNORE_VDW_ATTRACTIVE BOOLEAN]
      
  Set <ignore_vdw_attractive> so that any pairwiSe atomic vdw energy
  < 0 is set equal to 0.
        
ignore_vdw_attractive = yes

  [IGNORE_TORSION BOOLEAN]

  Set <ignore_torsion> to drop torsional energy from the
  conformational energy score.
        
ignore_torsion = no

 [NORMAL_LEN DOUBLE]

 <normal_len> is the ring normal distance used in scoring aromatic rings.

normal_len = 2

 [MAXIMUM_GAUSSIAN_SCORE DOUBLE]

 The gaussian score varies between 0 and 1.  If the score is greater
 than <maximum_gaussian_score> then the score is set to
 <maximum_gaussian_score>.  This can be used to flatten the top of the
 gaussian.

maximum_gaussian_score = 200

 [SCALE_PHARMACOPHORE BOOLEAN]
 [GEOMETRIC_WEIGHT_CRITERIA DOUBLE]
 [PHARM_FACTOR DOUBLE]

 Set <pharmacophore_scaling> to give a boot when a feature in the base
 molecule is matched in more than one other molecule.  A feature is
 matched when the gemometic weight (which varies between 0 and 1) is
 greater that <geometric_weight_criteria>.  The score for that feature
 is multiplied by <no_molecules_matched>**<pharm_factor>.

scale_pharmacophore = yes
geometric_weight_criteria = .5
pharm_factor = .5

 [USER_FEATURES_FILE_1 FILENAME OPTIONAL]
 [USER_FEATURES_FILE_2 FILENAME OPTIONAL]
 [USER_FEATURES_FILE_3 FILENAME OPTIONAL]
 [USER_FEATURES_FILE_4 FILENAME OPTIONAL]
 [USER_FEATURES_FILE_5 FILENAME OPTIONAL]
 [USER_FEATURES_FILE_6 FILENAME OPTIONAL]
 [USER_FEATURES_FILE_7 FILENAME OPTIONAL]
 [USER_FEATURES_FILE_8 FILENAME OPTIONAL]
 [USER_FEATURES_FILE_9 FILENAME OPTIONAL]
 [USER_FEATURES_FILE_10 FILENAME OPTIONAL]
 
 You can define you own features in a file.  These will be
 incorporated into both the scoring function and the chromsome
 encoding.  See the example user feaures file for more information.
 You can have up to 10 sets of user features defined.

# user_features_file_1 = example_user_features.txt

 [HYDROGEN_BONDING SECTION]

 This section contains variables that are used to define the hydrogen
 bonding contribution to the fitness function.

 [HYDROGEN_BONDING_FILE FILENAME OPTIONAL]

 The variable <hydrogen_bonding_file> can be used to load an
 alternative set of hydrogen bonding definitions. The default hydrogen
 bonding types are based on Mill and Dean (JCAMD, v10, 1996,
 pp607-622).  The default hydrogen bond definitions are in a resource
 file (com.cairn.ga.donor_acceptor_types.txt).

# hydrogen_bonding_file = c:/Gareth/gape/donor_acceptor_types.txt
        
  
 [H_BOND_LEN DOUBLE]

 <h_bond_len> is the average length of a hydrogen bond.

h_bond_len = 2.9

 [SOLVENT_VOL_OK DOUBLE]
 [ATOM_SOLVENT_RADIUS DOUBLE]

 Fitting points for donor hydrogens and the dorward direction for
 acceptors are checked for solvent accessibilty.  The units are based
 on the overlay of gaussians and are not too
 intuitive. <solvent_vol_ok> is the ammount of desolvation volume
 that can be ignored without penalty.  <atom_solvent_radius> is the
 gaussian radius used around the fitting point for determining solvent
 accessibility.

 
solvent_vol_ok = 0.025
atom_solvent_radius = 1.0

 [CHARGE_FACTOR DOUBLE]
 [MATCH_FACTOR DOUBLE]

 When donor fitting points and acceptor atoms are overlayed they get a
 geometric score between 0 and 1- based on the overlap of fitting
 point gaussians.  That score is then multiplied by <charge_factor> if
 both hydrogen bonding groups are charged.  It is also multiplied by
 <match_factor> if both groups are the same type. 

charge_factor = 2
match_factor = 1

 [SCORE_DONOR_ATOMS BOOLEAN]
 [MAX_DONOR_DONOR_ANGLE DOUBLE]
 [MIN_DONOR_DONOR_ANGLE DOUBLE]

 If <score_donor_atoms> is set then the geometic score for donors will
 also factor in the position of the donors as well as the overlay of
 the virtual fitting point.  If the donor-fitting point-donor angle is
 less than <min_donor_donor_angle> the factor is 1 and if it is
 greater than <max_donor_donor_angle> the factor is 0.  In between we
 use linear interpolation.

score_donor_atoms = yes
max_donor_donor_angle = 100
min_donor_donor_angle = 60

 [SCALE_LONE_PAIRS BOOLEAN]
 [MAX_FORWARD_ACCEPTOR_ANGLE DOUBLE]
 [MIN_FORWARD_ACCEPTOR_ANGLE DOUBLE]
 [MAX_LONE_PAIR_LONE_PAIR_ANGLE DOUBLE]
 [MIN_LONE_PAIR_LONE_PAIR_ANGLE DOUBLE]
 [MAX_PLANE_LONE_PAIR_ANGLE DOUBLE]
 [MIN_PLANE_LONE_PAIR_ANGLE DOUBLE]
 [MAX_PLANE_PLANE_ANGLE DOUBLE]
 [MIN_PLANE_PLANE_ANGLE DOUBLE]
       
 If <scale_lone_pairs> is set then the geometic score for acceptor
 atoms will also facto in lone pair position.  Acceptors can have
 hyrogen bonding preferences in a cone defined by the lone pairs, in a
 plane defined by the lone pairs, alone the lone pair or have no lone
 pair preference.  This program treats a cone preference as equivalent
 to no preference.  All acceptors are expected to have a similar
 forward direction defined by <max_forward_acceptor_angle> and
 <min_forward_acceptor_angle> (the calculation is performed as per
 donor/donor angles).  Also for accaptors with planar or lone-pair
 directional preferences there are plane/plane, lone pair/lone pair
 and plane/lone pair constraints.

scale_lone_pairs = yes
max_forward_acceptor_angle = 80.0
min_forward_acceptor_angle = 50.0
max_lone_pair_lone_pair_angle = 50.0
min_lone_pair_lone_pair_angle = 20.0
max_plane_lone_pair_angle = 50.0
min_plane_lone_pair_angle = 20.0
max_plane_plane_angle = 50.0
min_plane_plane_angle = 20.0

 

 [MOLECULE SECTION]

 Variables to determine input structures and the base molecule.

 [MOLECULES STRUCTUREFILE OPTIONAL]

 If <molecules> is set to a SDF or MOL2 filename then input structures
 are read from this: alternatively you specify input structures on the
 command line.

#  molecules = c:/tmp/test.mol2

 [RIGID_MOL MENU OPTIONAL MOLNAME MOLECULES]

 If <rigid_mol> is set to a structure name then that structure is held
 rigid and is also chosen as the base molecule.

# rigid_mol = Structure_3

 [BASE_MOLECULE MENU OPTIONAL MOLNAME MOLECULES]

 If <base_molecule> is set to a structure name that structure is
 chosen as the base molecule.
       
# base_molecule = Structure_3

 [BASE_MOLECULE_SELECTION MENU (MIN_ROTATABLE_BONDS, MAX_FEATURES, MAX_ACTIVITY)]

 Otherwise the program determines the base molecule.  Three stratagies
 are available <min_rotatable_bonds>, which uses the least flexible
 structure (minimizing the complexity of the problem), or
 <max_features> which choses the molecule with the largest number of
 features (maximizing the potential pharmacophore).  The
 <max_activity> strategy is only available when <use_activities> is
 selected, in which case the most active compound is chosen as the
 base molecule.

# base_molecule_selection = min_rotatable_bonds
base_molecule_selection = max_features

 [FITTING_MOLECULE_SELECTION MENU (MIN_ROTATABLE_BONDS, MAX_FEATURES, BASE_MOLECULE)]

 The strategy for determining the fitting molecule.  In early versions
 the base molecule was the same as the fitting molecule.  Now you can
 set one molecule to be the molecule that all the other molecules are
 fitted on to (this is the fitting molecule) then use the base
 molecule as the template molecule in the scoring function.  Three
 stratagies are available <min_rotatable_bonds>, which uses the least
 flexible structure (minimizing the complexity of the problem), or
 <max_features> which choses the molecule with the largest number of
 features or <base_molecule> which just uses the base molecule.

fitting_molecule_selection = base_molecule
# fitting_molecule_selection = min_rotatable_bonds

 [ADD_HYDROGENS BOOLEAN]

  If <add_hydrogens> is set hydrogens will be added to fill valence.
  Note that this will add protons to some charged acid groups (though
  these will be removed if you have solvate set).  Hydrogens will not
  be added to carboxylate, phosphynl, terminal phosphate or terminal
  sulphate.

add_hydrogens = no

 [SOLVATE BOOLEAN]

 If <solvate> is set then GAPE will find common acids and bases and
 convert them to the appropriate charged form (acids and bases that
 are charged at physiological pH are defined in the resource file
 com.cairn.molecule.solvate.txt).

solvate = no

 [OTHERS SECTION]

 Other variables

 [LOG_LEVEL INTEGER]

 This controls the level of output in the log file.  It can vary
 between 0 (virtually no output) to 3 (lots of output).  For GAPE an
 log level of 3 is fine- for the rigid body pharmacophore search use 0
 or 1 to prevent the application becoming IO-bound.

log_level = 1

 [GRAYCODE BOOLEAN]

 Set <graycode> to use Gray coding in binary strings.

graycode = no

 [FLIP_FREE_CORNERS BOOLEAN]

 Set <flip_free_corners> to explore cyclic ring flexibility.

flip_free_corners = yes

 [SEED_FILE FILENAME OPTIONAL]

 Set <seed_file> to a filename that contains seeds for the random
 number generator.  The GA outputs such a file, so this setting is
 useful for reproducing GA behaviour.

 [DIRECTORY STRING OPTIONAL]
 
 Set <directory> to run gape somewhere other than the current 
 directory.  If the directory does not exist an attempt is made to
 create it.  Any input files other than the configuration file will 
 need to be in that directory.

# seed_file = seedfile

 [USE_TORDIST_FILE BOOLEAN]

 Set <use_tordist_file> to restrict conformational sampling of certain
 common torsions- uses the MIMUMBA torsional distributions (GOLD
 torsional distributions are also available).  The default
 torsional distribution file is in the jar-file, as are NUMIMBA and
 GOLD torsional distribution files.
        
use_tordist_file = yes

 [TORDIST_FILE FILENAME OPTIONAL]

 The variable <tordist_file> can be used to load an alternative
 torsional distribution file.
        
# tordist_file = c:/Gareth/gape/tordist.txt
        
 [FLATTEN_BONDS BOOLEAN]

 Set <flatten_bonds> so that amide bonds and anilinic nitrogen
 torsions are set planar.

flatten_bonds = yes

 [FLIP_AMIDE_BONDS BOOLEAN]

 Set <flip_amide_bonds> so that amide bonds are free to flip between
 trans and cis.

flip_amide_bonds = no

 [REPORT_INTERVAL INTEGER]
 
 Set <report_interval> to an iteration interval to report on the state
 of the GA populations in ga.log.  If <report_interval> is -1, then
 information is generated only when the best solution changes.

report_interval = -1

 [DUMP_CURRENT_BEST BOOLEAN]

 Set <dump_current_best> to output the current best solution to a mol2
 file.  This way you can see the overlay evolving.
       
dump_current_best = no

 [GROUP_RESULTS BOOLEAN]

 Set <group_results> so that structure output for each run goes into
 one file.  Otherwise a seperate file is created for each structure.

group_results = yes

 [INC_LONE_PAIRS BOOLEAN]

 Set <inc_lone_pairs> to include lone pairs in MOL2 file output.

inc_lone_pairs = no

 [OUTPUT_RANDOMIZED BOOLEAN]

 Set <output_randomized> to output initial randomized structures

output_randomized = no

 [DO_RIGID_FIT BOOLEAN]

 Set <do_rigid_fit> to fit alignments to the best solution.  Rigid
 body fitting is used to align each base molecule to the base molecule
 in the best solution.  The same tranform is applied to other molecules
 in the alignment.  Probably not a good idea to use this with pharm
 search.

do_rigid_fit = yes

 [BREAK_LARGE_CYCLES BOOLEAN]

 Set <break_large_cycles> true to explore large cyclic ring systems by
 breaking the ring on a rotatable bond and allowing conformational
 search of the ring.  The broken bond is replaced by constraints.

break_large_cycles = yes

 [RELAX_MOLECULE BOOLEAN]
 [RELAX_MAX_DISTANCE DOUBLE]
 [RELAX_MAX_ANGLE DOUBLE]

 Set <relax_molecule> to apply a slight translation and rotation to a
 molecule during fitting.  The value of this is encoded in the
 chromosome and will vary up to <relax_max_distance> for translation
 <relax_max_angle> for rotation.  I think that there are normally
 sufficient fitting points as this option typically results in
 slightly worse solutions.

relax_molecule = no
relax_max_distance = 0.5
relax_max_angle = 5.0


 [ACTIVITIES SECTION]

 Gape can scale contributions to fitness based on activities.  Set
 <use_activities> in order to enable this.  You then need to specify
 activities for each compound in the overlay.  Activities should be
 specified in pKi units (i.e. -1*log(<molar activity>), so activity of
 1uM has a pKi of 6).

 [USE_ACTIVITIES BOOLEAN OPTIONAL]

 Set <use_activities> to enable activities.

 Activity lines are of the form: activity <pKa> <molecule_name>

# activity -6 Risperidone


 [GRIPS SECTION]

 This section contains settings for the rigid conformational search
 application (GRIPS- Gape RigId Pharmacophore Search).  You can ignore
 this tab if you're using the standard GAPE. Note that GRIPS
 ignores many of the GAPE settings, including all GA and
 conformational searching settings and forcefield energy terms.  When
 using GRIPS reduce the <log_level> setting in the OTHERS tab.

 [RIGID_PHARM_TOLERANCE DOUBLE]

 Distances between pharmacophore points in the query and target are
 compared.  They are considered equivalent if
 |(<query_distance>-<target_distance>)/<query_distance>| <
 <rigid_pharm_tolerance>.

rigid_pharm_tolerance = 0.2

 [MAX_SAVED_HITS INTEGER]

 This is the number of hits saved.

max_saved_hits = 1000

 [REPORT_MOLS INTEGER]

 A message is written to the log file every <report_mols>
 conformations, so that the user can monitor progress.

report_mols = 1000

 [USE_PROXIMITY BOOLEAN]
 [PROXIMITY_DISTANCE DOUBLE]
 
 Set <use_proximity> to true to include a proximity test.  If a
 proximity test is included then any target with any atom more that
 <proximity_distance> angstroms from any query atom will be rejected.

use_proximity = yes
proximity_distance = 5

 [OPENEYE_CONFORMERS BOOLEAN]

 Set <openeye_conformers> if the RIPS search is being performed on
 Openeye Omega conformers.  The program will use structure names to see
 if the target being processed is a new structure or a new conformer of
 the previous structure.  (Conformer names are like conformer_1,
 conformer_2 or conformer_1_rconf, conformer_2_rconf etc).  The structures
 will be processed much more quickly.  This setting is not used if
 <conformers_prepared> is false and <solvate> or <add_hydrogens> is set.

openeye_conformers = yes

 [CONFORMERS_PREPARED BOOLEAN]

 Set to true if the conformer library has been prepared by adding
 hydrogens and solvating.  In this case GRIPS will not fill valance or
 solvate target structures.  You can still use <solvate> or
 <add_hydrogens> to prepare the query structures.  If
 <conformers_prepared> is false then <solvate> and <add_hydrogens>
 will be used to prepare the target conformers.

conformers_prepared = yes
        
 [N_CONFORMER_MATCHES INTEGER]

 Set <n_conformer_matches> to the maximum number of conformer hits
 that a single structure can return.  Set to -1 to return all matching
 conformers.  This option is ignored if <openeye_conformers> is not
 set.

n_conformer_matches = 1

 [NO_STRUCTURE BOOLEAN]

  Set <no_structure> to ignore any structure information in the query
  file and search on pharmacophore definitions only.

no_structure = no

 [NO_PHARMACOPHORE BOOLEAN]

 Set no_pharmacophore to ignore a query pharmacophore (even if one is
 defined in the input structure) and search on all features.  This
 only works for a single query molecule.

no_pharmacophore = no        

 [CHECK_POINT INTEGER]

 Set <check_point> to a molecule count <count>.  After processing every
 <count> conformers the current hits will be saved to a file. To ignore set to -1.

check_point = -1

 [SAVE_POINT INTEGER]

 Set <save_point> to a molecule count <count>.  After processing every
 <count> conformers the current hits will be saved to a file. All hits
 will then be deleted an a new hit-list created.  To ignore set to -1.
  
save_point = -1

 [SKIP_MOLECULES INTEGER]

 Set <skip_molecules> to a molecule count <count>.  The first
 <skip_molecules> input atructures will be ignored. To ignore set to
 -1.  Use for debugging and with <save_point>.

skip_molecules = -1

 [TEXT_SUMMARY BOOLEAN]

 Set <text_summary> to output a text file summary of all matches and
 scores to grips_summary.txt.

text_summary = yes

 
 
